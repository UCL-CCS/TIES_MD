#################################################################
#                                                               #
#                             TIES                              #
#                                                               #
#################################################################

#Which molecular dynamics engine will be used, valid options are namd/openmm
engine = {engine}

#Target temperature for the thermostat
temperature = {temperature}*unit.kelvin

#Target pressure for barostat
pressure = {pressure}*unit.atmospheres

#How much production sampling to run per alchemical window.
sampling_per_window = {sampling_per_window}*unit.nanoseconds

#How much equilibration to run per alchemical window.
equili_per_window = {equili_per_window}*unit.nanoseconds

#TI, FEP
methods = {methods}

#How many total replicas of each window are run (we recommend at least 5).
total_reps = {total_reps}

#Where in lambda schedule (0->1) should the electrostatic potentials begin, stop appearing.
elec_edges = {elec_edges}

#Where in lambda schedule (0->1) should the Lennard_Jones potentials begin, stop appearing.
ster_edges = {ster_edges}

#The value the global controlling parameter takes in each window.
global_lambdas = {global_lambdas}

#name of constraint file, assumed to be in build directory
constraint_file={cons_file}

#which column of con file contains info can be beta_factor/occupancy
constraint_column = {constraint_column}

#AMBER only supported input.
input_type = {input_type}

#If cell basis vectors are given then below options are ignored
#What type of simulation cell is used valid options are cube, truncatedOctahedron, rhombicDodecahedron or na for manual.
box_type = {box_type}
edge_length = {edge_length}

#simulation cell
cell_basis_vec1 = {cbv1},  {cbv2},  {cbv3}
cell_basis_vec2 = {cbv4},  {cbv5},  {cbv6}
cell_basis_vec3 = {cbv7},  {cbv8},  {cbv9}



